//1. Перевод градусов по Цельсию в градусы по Фаренгейту
var Tc = +prompt("Перевод температуры по Цельсию в температуру по Фаренгейту.\n \nВведите температуру в градусах по Цельсию:");
Tf = (9/5)*Tc+32;
alert("Температура по Цельсию: " + Tc + "\nТемпература по Фаренгейту: " + Tf);

//2.1. Присвоение имени админу. Вариант 1
var name = prompt("Имя для администратора (вариант 1).\n \nУкажите имя (например, Василий):");
var admin = name;
alert("Вы указали имя администратора: " + admin);

//2.2. Присвоение имени админу. Вариант 2
var user = {
  name: prompt("Имя для администратора (вариант 2).\n \nУкажите имя (например, Иван):"),
}
var admin = user;
alert("Вы указали имя администратора: " + admin.name);

//3. Замена переменных a и b, без применения третьей переменной c.
var a = +prompt("Замена переменных a и b, без применения третьей переменной c.\n \nУкажите переменную a (любое число):");
var b = +prompt("Укажите переменную b (любое число):");
a = a + b;
b = a - b;
a = a - b;
document.write("Я поменяла переменные местами. \nТеперь a = " + a + ", b = " + b);

/*4. Чему будет равно JS-выражение 1000 + "108"?

Ответ: 1000108 */

/*5. *Самостоятельно разобраться с атрибутами тега script (async и defer).

Ответ: Атрибут defer сообщает браузеру, чтобы он обрабатывал страницу и загружал скрипт в фоновом режиме, а затем запустил скрипт, когда тот загрузится. Отложенные с помощью defer скрипты сохраняют порядок относительно друг друга, как и обычные скрипты.
Атрибут async означает, что скрипт абсолютно независим. Страница не ждет асинхронных скриптов, содержимое обрабатывается и отображается. Скрипты не ждут друг друга и могут выполняться в любом порядке в соотвествии с загрузкой.*/